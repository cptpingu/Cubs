#!/bin/cub
#6
#--
#--
var a, b, c : integer;
var f : string;
var truc : string;

function nothing () : integer;
begin
end

function callRecursive () : integer;
begin
  callRecursive();
end

function callAFunctionAfterMe () : integer;
begin
  c = my_func(0, "d", "e", "f");
end

function my_func (a: integer; d,e,f:string) : integer;
var local_a, local_b : integer;
var local_f : string;
begin
  return 34;
  return true;
  return "kikoo";
end

function test_this_function (a: integer; d,e,f:string ) : integer;
var local_a, local_b : integer;
var local_f : string;
begin
  a = 34;
  truc = "Heyya";
  b = my_func(0, "hello", "str3", "str4");
  nothing();
  begin
    if a == b then
    begin
      print ("cooucou");
      return "kikoo";
    end
    while a == b do
    begin
	read(local_f);
	return 0;
    end
  end
  local_b = ((55 * 56) + 37) / local_b;
  local_f = "cou" + "cou";
  exit true;
  exit "Kikoo";
  exit 23;
end


begin
  truc = " et \\\\\\encor\\\e un \" \\un\\ test\tess\n";
  a = 35 * a;
  nothing();
  print (nothing());
  print (test_this_function(true, "42", "quarante-deux", false));
  // This is a comment test
  a = (1 +(2 + (3 + 4)));
  a = "kikoo";
  exit 0;
end
